build-front:
  image: docker:dind
  stage: build
  script:
    - cd $CI_PROJECT_DIR
    - dockerd --host=unix:///var/run/docker.sock > /usr/local/bin/nohup.out 2>&1 &
    - docker pull $FRONTEND_IMAGE:latest || true
    - docker build --cache-from $FRONTEND_IMAGE:latest --tag $FRONTEND_IMAGE:$CI_COMMIT_SHA --tag $FRONTEND_IMAGE:latest -f ./docker/frontend.Dockerfile .
    - docker push $FRONTEND_IMAGE:$CI_COMMIT_SHA
    - docker push $FRONTEND_IMAGE:latest

build-back:
  image: docker:dind
  stage: build
  script:
    - cd $CI_PROJECT_DIR
    - dockerd --host=unix:///var/run/docker.sock > /usr/local/bin/nohup.out 2>&1 &
    - docker pull $BACKEND_IMAGE:latest || true
    - docker build --cache-from $BACKEND_IMAGE:latest --tag $BACKEND_IMAGE:$CI_COMMIT_SHA --tag $BACKEND_IMAGE:latest -f ./docker/backend.Dockerfile .
    - docker push $BACKEND_IMAGE:$CI_COMMIT_SHA
    - docker push $BACKEND_IMAGE:latest

stages:
  - build
  - deploy

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - kubectl config set-cluster "$CI_PROJECT_ID" --server="$KUBE_URL" --certificate-authority="$KUBE_CA_PEM_FILE"
    - kubectl config set-credentials "$CI_PROJECT_ID" --token="$KUBE_TOKEN"
    - kubectl config set-context "$CI_PROJECT_ID" --cluster="$CI_PROJECT_ID" --user="$CI_PROJECT_ID" --namespace="$KUBE_NAMESPACE"
    - kubectl config use-context "$CI_PROJECT_ID"
    - helm init --upgrade
    - helm repo add stable https://kubernetes-charts.storage.googleapis.com
    - helm upgrade --install friendzone --namespace default --atomic --set image.tag=${CI_COMMIT_SHA} charts/automoderation
  environment:
    name: production
    url: https://automoderation.y.friendzone.bot
  only:
  - master

variables:
  BACKEND_IMAGE: docker-registry.friendzone.bot/main/automoderation-backend
  FRONTEND_IMAGE: docker-registry.friendzone.bot/main/automoderation-frontend
  DOCKER_DRIVER: overlay2
